name: Terraform + Docker + ECR + EC2 Deploy

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: eu-north-1
  ECR_REPO_NAME: my-app-repo

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v3

      - name: 🔐 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 🔧 Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: 📁 Terraform Init
        run: terraform init

      - name: 📐 Terraform Plan
        run: terraform plan

      - name: 🚀 Terraform Apply
        run: terraform apply -auto-approve

      - name: 📤 Get Terraform Outputs
        id: tf_outputs
        run: |
          echo "REPO_URL=$(terraform output -raw repo_url)" >> $GITHUB_ENV
          echo "EC2_IP=$(terraform output -raw ec2_public_ip)" >> $GITHUB_ENV

      - name: 🔑 Write EC2 SSH Private Key
        run: |
          echo "${{ secrets.EC2_KEY_PAIR }}" > ec2_key.pem
          chmod 400 ec2_key.pem

      - name: 🔐 Login to ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $REPO_URL

      - name: 🏗️ Build Docker Image
        run: docker build -t $ECR_REPO_NAME .

      - name: 🏷️ Tag Docker Image
        run: docker tag $ECR_REPO_NAME:latest $REPO_URL:latest

      - name: 📤 Push Docker Image to ECR
        run: docker push $REPO_URL:latest

      - name: 🖥️ SSH into EC2 and Deploy Docker
        run: |
          ssh -o StrictHostKeyChecking=no -i ec2_key.pem ubuntu@$EC2_IP << 'EOF'
            # Install Docker if not already
            if ! command -v docker &> /dev/null; then
              sudo apt update
              sudo apt install -y docker.io
              sudo systemctl start docker
              sudo systemctl enable docker
            fi

            # Login to ECR from EC2
            aws ecr get-login-password --region $AWS_REGION | sudo docker login --username AWS --password-stdin $REPO_URL

            # Pull latest image
            sudo docker pull $REPO_URL:latest

            # Stop old container if exists
            sudo docker rm -f ecr_container || true

            # Run new container
            sudo docker run --name ecr_container -d -p 80:80 $REPO_URL:latest
          EOF
